#include <stdio.h>

int binary_search(int arr[], int n, int target) {
    int left = 0;
    int right = n - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;  // Find the middle index

        // Check if the target is present at mid
        if (arr[mid] == target) {
            return mid;  // Return the index of the target
        }
        
        // If the target is greater, ignore the left half
        if (arr[mid] < target) {
            left = mid + 1;
        }
        // If the target is smaller, ignore the right half
        else {
            right = mid - 1;
        }
    }

    return -1;  // Return -1 if target is not found
}

int main() {
    int arr[] = {10, 20, 30, 40, 50};  // Example sorted array
    int n = sizeof(arr) / sizeof(arr[0]);  // Get the size of the array
    int target = 30;  // Element to search for

    int result = binary_search(arr, n, target);

    if (result != -1) {
        printf("Element %d found at index %d.\n", target, result);
    } else {
        printf("Element %d not found in the array.\n", target);
    }

    return 0;
}
